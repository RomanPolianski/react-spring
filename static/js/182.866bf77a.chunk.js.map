{"version":3,"file":"static/js/182.866bf77a.chunk.js","mappings":"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","sources":["../node_modules/use-debounce/esm/useDebounce.js","../node_modules/use-debounce/esm/useDebouncedCallback.js","Components/Content/Projects/ProjectItem/ProjectItem.jsx","Components/Content/Projects/ProjectsRender.jsx","Components/Content/Projects/Projects.jsx"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport useDebouncedCallback from './useDebouncedCallback';\nfunction valueEquality(left, right) {\n    return left === right;\n}\nfunction adjustFunctionValueOfSetState(value) {\n    return typeof value === 'function' ? function () { return value; } : value;\n}\nfunction useStateIgnoreCallback(initialState) {\n    var _a = useState(adjustFunctionValueOfSetState(initialState)), state = _a[0], setState = _a[1];\n    var setStateIgnoreCallback = useCallback(function (value) { return setState(adjustFunctionValueOfSetState(value)); }, []);\n    return [state, setStateIgnoreCallback];\n}\nexport default function useDebounce(value, delay, options) {\n    var eq = (options && options.equalityFn) || valueEquality;\n    var _a = useStateIgnoreCallback(value), state = _a[0], dispatch = _a[1];\n    var debounced = useDebouncedCallback(useCallback(function (value) { return dispatch(value); }, [dispatch]), delay, options);\n    var previousValue = useRef(value);\n    if (!eq(previousValue.current, value)) {\n        debounced(value);\n        previousValue.current = value;\n    }\n    return [state, debounced];\n}\n","import { useRef, useEffect, useMemo } from 'react';\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.leading=false]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {number} [options.maxWait]\n *  Specify invoking on the trailing edge of the timeout.\n * @param {boolean} [options.trailing=true]\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * const resizeHandler = useDebouncedCallback(calculateLayout, 150);\n * window.addEventListener('resize', resizeHandler)\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * const clickHandler = useDebouncedCallback(sendMail, 300, {\n *   leading: true,\n *   trailing: false,\n * })\n * <button onClick={clickHandler}>click me</button>\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * source.addEventListener('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * window.addEventListener('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nexport default function useDebouncedCallback(func, wait, options) {\n    var _this = this;\n    var lastCallTime = useRef(null);\n    var lastInvokeTime = useRef(0);\n    var timerId = useRef(null);\n    var lastArgs = useRef([]);\n    var lastThis = useRef();\n    var result = useRef();\n    var funcRef = useRef(func);\n    var mounted = useRef(true);\n    funcRef.current = func;\n    // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n    var useRAF = !wait && wait !== 0 && typeof window !== 'undefined';\n    if (typeof func !== 'function') {\n        throw new TypeError('Expected a function');\n    }\n    wait = +wait || 0;\n    options = options || {};\n    var leading = !!options.leading;\n    var trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default\n    var maxing = 'maxWait' in options;\n    var maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;\n    useEffect(function () {\n        mounted.current = true;\n        return function () {\n            mounted.current = false;\n        };\n    }, []);\n    // You may have a question, why we have so many code under the useMemo definition.\n    //\n    // This was made as we want to escape from useCallback hell and\n    // not to initialize a number of functions each time useDebouncedCallback is called.\n    //\n    // It means that we have less garbage for our GC calls which improves performance.\n    // Also, it makes this library smaller.\n    //\n    // And the last reason, that the code without lots of useCallback with deps is easier to read.\n    // You have only one place for that.\n    var debounced = useMemo(function () {\n        var invokeFunc = function (time) {\n            var args = lastArgs.current;\n            var thisArg = lastThis.current;\n            lastArgs.current = lastThis.current = null;\n            lastInvokeTime.current = time;\n            return (result.current = funcRef.current.apply(thisArg, args));\n        };\n        var startTimer = function (pendingFunc, wait) {\n            if (useRAF)\n                cancelAnimationFrame(timerId.current);\n            timerId.current = useRAF ? requestAnimationFrame(pendingFunc) : setTimeout(pendingFunc, wait);\n        };\n        var shouldInvoke = function (time) {\n            if (!mounted.current)\n                return false;\n            var timeSinceLastCall = time - lastCallTime.current;\n            var timeSinceLastInvoke = time - lastInvokeTime.current;\n            // Either this is the first call, activity has stopped and we're at the\n            // trailing edge, the system time has gone backwards and we're treating\n            // it as the trailing edge, or we've hit the `maxWait` limit.\n            return (!lastCallTime.current ||\n                timeSinceLastCall >= wait ||\n                timeSinceLastCall < 0 ||\n                (maxing && timeSinceLastInvoke >= maxWait));\n        };\n        var trailingEdge = function (time) {\n            timerId.current = null;\n            // Only invoke if we have `lastArgs` which means `func` has been\n            // debounced at least once.\n            if (trailing && lastArgs.current) {\n                return invokeFunc(time);\n            }\n            lastArgs.current = lastThis.current = null;\n            return result.current;\n        };\n        var timerExpired = function () {\n            var time = Date.now();\n            if (shouldInvoke(time)) {\n                return trailingEdge(time);\n            }\n            // https://github.com/xnimorz/use-debounce/issues/97\n            if (!mounted.current) {\n                return;\n            }\n            // Remaining wait calculation\n            var timeSinceLastCall = time - lastCallTime.current;\n            var timeSinceLastInvoke = time - lastInvokeTime.current;\n            var timeWaiting = wait - timeSinceLastCall;\n            var remainingWait = maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n            // Restart the timer\n            startTimer(timerExpired, remainingWait);\n        };\n        var func = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var time = Date.now();\n            var isInvoking = shouldInvoke(time);\n            lastArgs.current = args;\n            lastThis.current = _this;\n            lastCallTime.current = time;\n            if (isInvoking) {\n                if (!timerId.current && mounted.current) {\n                    // Reset any `maxWait` timer.\n                    lastInvokeTime.current = lastCallTime.current;\n                    // Start the timer for the trailing edge.\n                    startTimer(timerExpired, wait);\n                    // Invoke the leading edge.\n                    return leading ? invokeFunc(lastCallTime.current) : result.current;\n                }\n                if (maxing) {\n                    // Handle invocations in a tight loop.\n                    startTimer(timerExpired, wait);\n                    return invokeFunc(lastCallTime.current);\n                }\n            }\n            if (!timerId.current) {\n                startTimer(timerExpired, wait);\n            }\n            return result.current;\n        };\n        func.cancel = function () {\n            if (timerId.current) {\n                useRAF ? cancelAnimationFrame(timerId.current) : clearTimeout(timerId.current);\n            }\n            lastInvokeTime.current = 0;\n            lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = null;\n        };\n        func.isPending = function () {\n            return !!timerId.current;\n        };\n        func.flush = function () {\n            return !timerId.current ? result.current : trailingEdge(Date.now());\n        };\n        return func;\n    }, [leading, maxing, wait, maxWait, trailing, useRAF]);\n    return debounced;\n}\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport s from '../../Content.module.css';\r\n\r\nfunction ProjectItem({\r\n  image, title, text,\r\n}) {\r\n  return (\r\n    <div className={classNames(s.project, s.bgWhite)}>\r\n      <div>\r\n        <img className={s.projectIconHeader} src={image} alt=\"Project Icon\" />\r\n        <div className={s.projectHeader}>\r\n          <h3 className={s.bold}>{title}</h3>\r\n        </div>\r\n      </div>\r\n      <div className={s.projectDescription}>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectItem;\r\n","import React from 'react';\r\nimport ProjectItem from './ProjectItem/ProjectItem';\r\nimport s from '../Content.module.css';\r\n\r\nfunction ProjectsRender({ projects }) {\r\n  const projItem = [...projects].map((i) => (\r\n    <ProjectItem image={i.image_url} title={i.title} text={i.project_info} key={i.id} />\r\n  ));\r\n  return <div className={s.projects}>{projItem}</div>;\r\n}\r\n\r\nexport default ProjectsRender;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable no-use-before-define */\r\nimport React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useDebounce } from 'use-debounce';\r\nimport s from '../Content.module.css';\r\nimport ProjectsRender from './ProjectsRender';\r\nimport { fetchSearchProjects } from '../../../Redux/itemsRenderSlice';\r\n\r\nfunction Projects() {\r\n  const [text, setText] = useState('');\r\n  const [value] = useDebounce(text, 1000);\r\n  const projects = useSelector((state) => state.renderItems.projects);\r\n  const filteredProjects = [...projects];\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSearchProjects(value));\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className={classNames(s.content, s.bgGrey)}>\r\n      <div className={s.container}>\r\n        <section>\r\n          <input\r\n            placeholder=\"Find your project\"\r\n            type=\"text\"\r\n            className={s.projInput}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n          <div className={s.projContent}>\r\n            <div className={s.bgGrey}>\r\n              {filteredProjects.length > 0 ? (\r\n                <ProjectsRender projects={filteredProjects} />\r\n              ) : (\r\n                <div className={s.projNoResult}>No Results</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"names":["valueEquality","left","right","adjustFunctionValueOfSetState","value","useDebounce","delay","options","eq","equalityFn","_a","initialState","useState","state","setState","useCallback","useStateIgnoreCallback","dispatch","debounced","func","wait","_this","this","lastCallTime","useRef","lastInvokeTime","timerId","lastArgs","lastThis","result","funcRef","mounted","current","useRAF","window","TypeError","leading","trailing","maxing","maxWait","Math","max","useEffect","useMemo","invokeFunc","time","args","thisArg","apply","startTimer","pendingFunc","cancelAnimationFrame","requestAnimationFrame","setTimeout","shouldInvoke","timeSinceLastCall","timeSinceLastInvoke","trailingEdge","timerExpired","Date","now","timeWaiting","remainingWait","min","_i","arguments","length","isInvoking","cancel","clearTimeout","isPending","flush","useDebouncedCallback","previousValue","image","title","text","className","classNames","s","src","alt","projects","projItem","map","i","image_url","project_info","id","setText","useSelector","renderItems","filteredProjects","useDispatch","fetchSearchProjects","placeholder","type","onChange","e","target"],"sourceRoot":""}